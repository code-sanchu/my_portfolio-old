---
// alesh, appa, amy, amma, birch, other
import { Image } from "@astrojs/image/components";

import asaticImage from "~images/work/slider/asatic.jpg";
import amyImage from "~images/work/slider/amy.png";
import amyLogo from "~images/work/amy/logo.png";

const projects: {
  id: string;
  title:
    | { type: "image"; url: ImageMetadata }
    | { type: "text"; text: string | string[] };
  image: ImageMetadata;
  link: {
    text: string;
    url: string;
  };
  description: string;
}[] = [
  {
    id: "asatic",
    title: { type: "text", text: "ASATiC" },
    image: asaticImage,
    description: "website & cms",
    link: {
      text: "view project",
      url: "",
    },
  },
  {
    id: "amy",
    title: { type: "image", url: amyLogo },
    // title: { type: "image", text: ["Amy Rodriguez", "Jewellery"] },
    image: amyImage,
    description: "website",
    link: {
      text: "visit site",
      url: "",
    },
  },
];
// could change font for each project according to acutal site
// change project opacity 0 to display none
---

<div class="w-screen h-screen grid place-items-center font-display-secondary">
  <div id="projects-container" data-num-projects={projects.length}>
    {
      projects.map((project, i) => (
        <div
          id={`project${i}`}
          class={`flex overflow-hidden  ${i === 0 ? "" : "hidden"}`}
        >
          <div class="relative w-[350px] h-[500px] translate-y-full">
            <Image id={`image${i}`} src={project.image} alt="" format="avif" />
          </div>
          <div class="flex flex-col justify-end">
            <div class="overflow-y-hidden mb-xl ml-xl">
              <div class="translate-y-full">
                <p
                  id={`description${i}`}
                  class={`flex items-center gap-sm opacity-0 ${
                    project.id === "amy"
                      ? "font-amy"
                      : project.id === "asatic"
                      ? "font-asatic-r"
                      : ""
                  }`}
                >
                  <span>{project.description}</span>
                  <span class="w-[18px] h-[1px] block bg-black" />
                </p>
              </div>
            </div>
            <div class="overflow-y-hidden -translate-x-[80px]">
              <div class="translate-y-full">
                {project.title.type === "text" ? (
                  <h2
                    id={`title${i}`}
                    class={`text-7xl bg-work-title bg-clip-text text-transparent mb-3xl opacity-0 flex flex-col ${
                      project.id === "asatic" && "font-asatic-b"
                    }`}
                  >
                    {typeof project.title.text === "string"
                      ? project.title.text
                      : project.title.text.map((line) => (
                          <span class="">{line}</span>
                        ))}
                  </h2>
                ) : (
                  <div id={`title${i}`} class="w-[350px] mb-3xl opacity-0">
                    <Image src={project.title.url} alt="" format="avif" />
                  </div>
                )}
              </div>
            </div>
            <div class="translate-y-full">
              <p
                id={`link${i}`}
                class={`pl-2xl opacity-0 ${
                  project.id === "amy"
                    ? "font-amy"
                    : project.id === "asatic"
                    ? "font-asatic-r"
                    : ""
                }`}
              >
                {project.link.text}
              </p>
            </div>
          </div>
        </div>
      ))
    }
    <div class="flex justify-between px-md font-display-primary mt-sm">
      <button id="prev" type="button">&lt;</button>
      <button id="next" type="button">&gt;</button>
    </div>
  </div>
</div>

<script></script>

<script>
  import anime from "animejs/lib/anime.es";

  import { calcNextIndex } from "~helpers/index";

  function animateProjectIn({ index }: { index: number }) {
    const description = anime.timeline({
      targets: `#description${index}`,
      easing: "spring(6, 70, 80, 4)",
    });
    description.add({
      translateY: "-100%",
      opacity: 1,
    });

    const title = anime.timeline({
      delay: 400,
      targets: `#title${index}`,
      easing: "spring(6, 70, 80, 4)",
    });
    title.add({
      translateY: "-100%",
      opacity: 1,
    });

    const link = anime.timeline({
      targets: `#link${index}`,
      delay: 400,
      easing: "spring(6, 70, 80, 4)",
    });
    link.add({
      translateY: "-100%",
      opacity: 1,
    });

    const image = anime.timeline({
      targets: `#image${index}`,
      easing: "spring(6, 70, 80, 3)",
    });
    image.add({
      delay: 400,
      translateY: "-100%",
      opacity: 1,
    });
  }

  function animateProjectOut({ index }: { index: number }) {
    const description = anime.timeline({
      targets: `#description${index}`,
      easing: "spring(6, 70, 80, 4)",
    });
    description.add({
      translateY: "-200%",
      opacity: 0,
    });
    description.add({
      translateY: "0%",
    });

    const title = anime.timeline({
      delay: 200,
      targets: `#title${index}`,
      easing: "spring(6, 70, 80, 4)",
    });
    title.add({
      translateY: "-200%",
      opacity: 0,
    });
    title.add({
      translateY: "0%",
    });

    const link = anime.timeline({
      targets: `#link${index}`,
      delay: 200,
      easing: "spring(6, 70, 80, 4)",
    });
    link.add({
      translateY: "-200%",
      opacity: 0,
    });
    link.add({
      translateY: "0%",
    });

    const currentImage = anime.timeline({
      delay: 400,
      targets: `#image${index}`,
      easing: "spring(6, 70, 80, 3)",
    });
    currentImage.add({
      translateY: "-200%",
      opacity: 0,
    });
    currentImage.add({
      translateY: "0%",
    });
  }

  function main() {
    animateProjectIn({ index: 0 });

    const projectsContainer = document.getElementById("projects-container")!;
    const maxIndex = Number(projectsContainer.dataset.numProjects) - 1;

    let currentIndex = 0;
    let nextIndex = 1;

    const prevButton = document.getElementById("prev");
    const nextButton = document.getElementById("next");

    if (prevButton) {
      prevButton.addEventListener("click", () => {
        console.log("Clicked");
      });
    }
    if (nextButton) {
      nextButton.addEventListener("click", () => {
        console.log("currentIndex:", currentIndex);
        console.log("nextIndex:", nextIndex);

        // const currentImageId = `image${currentIndex}`;
        const currentProjectId = `project${currentIndex}`;
        const nextProjectId = `project${nextIndex}`;

        // Â· image out
        animateProjectOut({ index: currentIndex });

        setTimeout(() => {
          const currentProject = document.getElementById(currentProjectId)!;
          currentProject.style.display = "none";
          const nextProject = document.getElementById(nextProjectId)!;
          nextProject.style.display = "flex";
        }, 800);

        setTimeout(() => {
          animateProjectIn({ index: nextIndex });
          currentIndex = nextIndex;
          nextIndex = calcNextIndex({ currentIndex, maxIndex });
        }, 850);
      });
    }
  }

  main();
</script>
