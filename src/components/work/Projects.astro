---
// alesh, appa, amy, amma, birch, other
import { Image } from "@astrojs/image/components";

import asaticImage from "~images/work/slider/asatic.jpg";
import amyImage from "~images/work/slider/amy.png";

const projects = [
  {
    id: "asatic",
    title: " Asatic",
    image: asaticImage,
    description: "website & cms",
    link: {
      text: "view project",
      url: "",
    },
  },
  {
    id: "amyj",
    title: " Amy Rodriguez Jewellery",
    image: amyImage,
    description: "website",
    link: {
      text: "visit site",
      url: "",
    },
  },
];
// could change font for each project according to acutal site
// change project opacity 0 to display none
---

<div class="w-screen h-screen grid place-items-center font-display-secondary">
  <div id="projects-container" data-num-projects={projects.length}>
    {
      projects.map((project, i) => (
        <div
          id={`project${i}`}
          class={`flex overflow-hidden  ${i === 0 ? "" : "hidden"}`}
          data-selector="project"
        >
          <div class="relative w-[350px] h-[500px] translate-y-full">
            <Image id={`image${i}`} src={project.image} alt="" format="avif" />
          </div>
        </div>
      ))
    }
    <div class="flex justify-between px-md font-display-primary mt-sm">
      <button id="prev" type="button">&lt;</button>
      <button id="next" type="button">&gt;</button>
    </div>
  </div>
</div>

<script>
  /* <div class="flex flex-col justify-end">
            <div class="">
              <p class="mb-xl ml-xl flex items-center gap-sm">
                <span>{project.description}</span>
                <span class="w-[18px] h-[1.5px] block bg-black" />
              </p>
            </div>
            <div class="">
              <h2 class="text-8xl -translate-x-[80px] bg-work-title bg-clip-text text-transparent mb-3xl">
                {project.title}
              </h2>
            </div>
            <p class="pl-2xl">{project.link.text}</p>
          </div> */
</script>

<script>
  import anime from "animejs/lib/anime.es";

  function animateImageIn({ imageIndex }: { imageIndex: number }) {
    const image1 = anime.timeline({
      targets: `#image${imageIndex}`,
      easing: "spring(6, 70, 80, 3)",
    });
    image1.add({
      delay: 400,
      translateY: "-100%",
      opacity: 1,
    });
  }

  function animateFirstProjectOnPageLoad() {
    animateImageIn({ imageIndex: 0 });
  }

  function main() {
    animateFirstProjectOnPageLoad();

    const projectsContainer = document.getElementById("projects-container")!;
    const maxIndex = Number(projectsContainer.dataset.numProjects) - 1;

    let currentProjectIndex = 0;
    let nextProjectIndex =
      currentProjectIndex + 1 <= maxIndex ? currentProjectIndex + 1 : 0;

    const currentImageId = `image${currentProjectIndex}`;
    // const nextImageId = `#image${currentProjectIndex}`;
    const currentProjectId = `project${currentProjectIndex}`;
    const nextProjectId = `project${nextProjectIndex}`;

    const prevButton = document.getElementById("prev");
    const nextButton = document.getElementById("next");

    if (prevButton) {
      prevButton.addEventListener("click", () => {
        console.log("Clicked");
      });
    }
    if (nextButton) {
      nextButton.addEventListener("click", () => {
        const currentImage = anime.timeline({
          targets: `#${currentImageId}`,
          easing: "spring(6, 70, 80, 3)",
        });
        currentImage.add({
          translateY: "-200%",
          opacity: 0,
        });
        const currentProject = document.getElementById(currentProjectId)!;
        currentProject.style.display = "none";
        currentImage.add({
          translateY: "0%",
          opacity: 0,
        });
        console.log("nextProjectId:", nextProjectId);

        const nextProject = document.getElementById(nextProjectId)!;
        console.log("nextProject:", nextProject);
        nextProject.style.display = "block";

        animateImageIn({ imageIndex: nextProjectIndex });
      });
    }

    /*     const project1 = anime.timeline({
      targets: "#project1",
      easing: "cubicBezier(.5, .05, .1, .3)",
    });
    project1.add({
      opacity: 1,
      duration: 0,
    }); */

    /*     const description1 = anime.timeline({
      targets: "#description1",
      easing: "spring(6, 70, 80, 3)",
    });
    description1.add({
      translateY: "-100%",
      opacity: 1,
    });

    const title1 = anime.timeline({
      targets: "#title1",
      easing: "spring(6, 70, 80, 3)",
    });
    title1.add({
      translateX: -60,
      translateY: "-100%",
      opacity: 1,
    }); */
  }

  main();
</script>
